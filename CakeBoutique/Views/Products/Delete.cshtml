@model CakeBoutique.Models.Product

@{
    ViewData["Title"] = "Home Page";

    if (Context.User != null && Context.User.Claims != null &&
        Context.User.Claims.Count() > 0 && (Context.User.IsInRole("Admin") || Context.User.IsInRole("Editor")))
    {
        Layout = "_AdminLayout";
    }
    else
    {
        Layout = "_ClientLayout";
        <section>
            @await Component.InvokeAsync("CarouselManager")
        </section>
    }
}


<h3 class="text-center">Do you really want to delete this product?</h3>
<div>
    <hr />
    <dl class="container">
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.ProductName)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.Discount)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.Discount)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.Orders)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.Orders)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.StoreQuantity)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.StoreQuantity)
        </dd>
        <dt class="row justify-content-center">
            @Html.DisplayNameFor(model => model.NameOption)
        </dt>
        <dd class="row justify-content-center">
            @Html.DisplayFor(model => model.NameOption)
        </dd>
    </dl>

    <form class="row justify-content-center" asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" />
    </form>
</div>
